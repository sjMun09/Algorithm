Java는 String 을 처리할 때 내부(메모리 상에서)에서는 UTF-16 BE 인코딩으로 문자열을 저장하고, 송수신에서는 직렬화가 필요한 경우 변형된 UTF-8 (modified UTF-8) 을 사용하며 문자열을 
입/출력할 때에만 사용자가 지정한 인코딩 값 또는 운영체제의 기본 인코딩 값으로 문자열을 인코딩한다.

자바는 내부적으로 (메모리 상에서) 문자열이 UTF-16 으로 인코딩되어 처리된다.
문자열 송/수신을 위해 직렬화가 필요할 때에는 변형된 UTF-8 을 사용한다.
문자열을 입출력 할 때는 운영체제 기본 인코딩값, 또는 사용자가 지정한 인코딩 값으로 문자열을 인코딩한다. (내부 메모리 상에서 처리되는 것과는 다르다.)
1 ~ 127 까지는 Ascii 코드 값과 유니코드(UTF-8, UTF-16 등..), MS계열 코드(CP949, MS949 등..) 의 값이 같다. ( ms 랑 유니코드는 해당 범위에서 92 번만 다른데 이는 역슬래시로 윈도우에서는 대부분 ₩ 으로 표현되고 맥북, 리눅스 계열에서는 \ 으로 표현된다. )

UTF-8 과 UTF-16 의 차이는 Byte 구성 방식에서 차이가 있다.
UTF-8 의 경우 문자의 영역에 따라 Byte 사용 개수가 다른데, 영어의 경우 1Byte, 한글의 경우 3Byte 를 사용한다.
반대로 UTF-16 은 거의 모든 문자가 2Byte 로 구성된다. (특이케이스로 4Byte 로 구성되어있는 경우인데 쓸 일은 거의 없을 것이다. 만약 궁금하다면 써로게이트(surrogate) 를 검색해보면 된다.)


자세한 설명 및 출처 : https://st-lab.tistory.com/41?category=830901
